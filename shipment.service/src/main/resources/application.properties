server.port=${port:0}

# Application configuration
spring.application.name=shipment-ms

# Eureka client configuration
eureka.client.service-url.defaultZone=override
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# db
spring.datasource.url=jdbc:postgresql://localhost:5432/shipment_db?sslmode=disable
spring.datasource.username=user
spring.datasource.password=userpassword
spring.datasource.driver-class-name=org.postgresql.Driver

# kafka
kafka.server=localhost:9092
kafka.group.id=purchase.broadcast
purchase.event.topic=purchase_events

# jpa
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.max_fetch_depth=2
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.hbm2ddl.auto=validate

# batch
purchases.db.reader_query=select * from purchases where sent=false
purchases.db.writer_query=update purchases set sent=true where id=:id
purchases.file.path=~/files/file.csv